(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("reselect-tree", [], factory);
	else if(typeof exports === 'object')
		exports["reselect-tree"] = factory();
	else
		root["reselect-tree"] = factory();
})(typeof self !== 'undefined' ? self : this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 4);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = require("debug");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = require("source-map-support/register");

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = require("path");

/***/ }),
/* 3 */,
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _entries = __webpack_require__(5);

var _entries2 = _interopRequireDefault(_entries);

var _assign = __webpack_require__(6);

var _assign2 = _interopRequireDefault(_assign);

var _keys = __webpack_require__(7);

var _keys2 = _interopRequireDefault(_keys);

exports.createNestedSelector = createNestedSelector;
exports.createLeaf = createLeaf;
exports.createSelectorTree = createSelectorTree;

var _debug = __webpack_require__(0);

var _debug2 = _interopRequireDefault(_debug);

__webpack_require__(1);

var _reselect = __webpack_require__(8);

var _jsonPointer = __webpack_require__(9);

var _jsonPointer2 = _interopRequireDefault(_jsonPointer);

var _path = __webpack_require__(2);

var _path2 = _interopRequireDefault(_path);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const debug = (0, _debug2.default)("reselect-tree");

function createNestedSelector(selectors) {
  debug("creating nested selectors %o", (0, _keys2.default)(selectors));
  let selector = (0, _reselect.createStructuredSelector)(selectors);
  (0, _keys2.default)(selectors).forEach(prop => {
    selector[prop] = selectors[prop];
  });

  return selector;
}

class Leaf {
  constructor(deps, selector) {
    this.deps = deps;
    this.selector = selector;
  }

  contextualize(resolve, pointer) {
    let resolved = this.deps.map(dep => {
      if (typeof dep == 'string') {
        if (dep == "") {
          dep = "/";
        }

        let abspath = _path2.default.posix.resolve(pointer, "..", dep);

        return (...args) => {
          debug("args: %o", args);
          let selector = resolve(abspath);
          debug("resolved selector: %o", selector);
          let result = selector.apply(selector, args);
          debug("result: %o", result);
          return result;
        };
      }

      return dep;
    });

    return (0, _reselect.createSelector)(resolved, this.selector);
  }
}

function createLeaf(deps, selector) {
  return new Leaf(deps, selector);
}

class Tree {
  setRoot(root) {
    this.root = root;
  }

  resolve(abspath) {
    debug("selecting %s", abspath);
    var resolved;
    try {
      let parsed = _jsonPointer2.default.parse(abspath);
      debug("path: %o", parsed);

      let cur = this.root;
      for (let step of parsed) {
        debug("step: %o, obj: %o", step, cur);
        cur = cur[step];
      }

      return cur;
    } catch (e) {
      debug("failed, root: %O", this.root);
      throw e;
    }

    return resolved;
  }
}

function createSelectorTree(root) {
  let tree = new Tree();

  let selector = _createNode(root, tree.resolve.bind(tree), "");

  tree.setRoot(selector);

  return selector;
}

function _createNode(node, resolve, pointer = "") {
  if (node instanceof Leaf) {
    debug("creating leaf at %s", pointer);
    return node.contextualize(resolve, pointer);
  } else if (node instanceof Object && !(node instanceof Function)) {
    debug("recursing %o", node);
    return createNestedSelector((0, _assign2.default)({}, ...(0, _entries2.default)(node).map(([key, child]) => ({
      [key]: _createNode(child, resolve, `${pointer}/${key}`)
    }))));
  } else {
    return node;
  }
}

/***/ }),
/* 5 */
/***/ (function(module, exports) {

module.exports = require("babel-runtime/core-js/object/entries");

/***/ }),
/* 6 */
/***/ (function(module, exports) {

module.exports = require("babel-runtime/core-js/object/assign");

/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = require("babel-runtime/core-js/object/keys");

/***/ }),
/* 8 */
/***/ (function(module, exports) {

module.exports = require("reselect");

/***/ }),
/* 9 */
/***/ (function(module, exports) {

module.exports = require("json-pointer");

/***/ })
/******/ ]);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,